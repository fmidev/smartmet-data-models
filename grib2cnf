#!/usr/bin/php -q
<?php

$result = array();

$id = array("pres"=>1,"msl"=>1,"prmsl"=>1,"z"=>2,"gh"=>2,"h"=>3,"t"=>4,"2t"=>4,"tmax"=>5,"tmin"=>6,"papt"=>9,"dpt"=>10,"2d"=>10,"q"=>12,"r"=>13,"2r"=>13,"orog"=>17,"10wdir"=>20,"10si"=>21,"u"=>23,"10u"=>23,"v"=>24,"10v"=>24,"strf"=>29,"vo"=>30,"absv"=>31,"vp"=>39,"pwat"=>47,"cp"=>48,"acpcp"=>48,"tp"=>50,"sde"=>51,"ulwrf"=>52,"uswrf"=>53,"lsp"=>55,"ncpcp"=>55,"cape"=>59,"cin"=>66,"tcc"=>79,"kx"=>80,"w"=>140,"sst"=>162,"swh"=>165,"cprat"=>201,"d"=>244,"sf"=>264,"lcc"=>273,"mcc"=>274,"hcc"=>275,"cwat"=>276,"lsm"=>281,"al"=>284,"st"=>285,"soilw"=>286,"nswrt"=>313,"nlwrt"=>314,"dlwrf"=>315,"dswrf"=>316,"slhf"=>321,"lhtfl"=>321,"sshf"=>322,"shtfl"=>322,"prate"=>353,"hlcy"=>382,"vis"=>407,"gust"=>417,"tozne"=>441,"sp"=>472,"ci"=>532);

$shortNames = array("1008"=>"tp","20002"=>"","6001"=>"tcc","7006"=>"cape","7007"=>"cin");

$unit = array("K"=>"-273.15;1","Pa"=>"0;0.01","kg m-2 s-1"=>"0;3600","Pa s-1"=>"0;0.01");

exec("grib_get -p editionNumber $argv[1]",$editionNumbers);
exec("grib_get -p name $argv[1]",$parameterNames);
exec("grib_get -p parameterName $argv[1]",$altparameterNames);
exec("grib_get -p units $argv[1]",$parameterUnits);
exec("grib_get -p parameterCategory $argv[1]",$parameterCategory);
exec("grib_get -p parameterNumber $argv[1]",$parameterNumber);
exec("grib_get -n statistics -p maximum $argv[1]",$maximumValues);

$i=0;
#$ph = popen ("grib_get -p paramId,shortName,typeOfLevel,level,unitsOfFirstFixedSurface,typeOfLevel,centre,parameterCategory,parameterNumber $argv[1]","r");
$ph = popen ("grib_get -p paramId,shortName,typeOfLevel,level,typeOfLevel,typeOfLevel,centre $argv[1]","r");
while ($row = @fscanf ($ph, "%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n"))
{
#    print_r($row);
	if ($row[1]=="CLCT")
	  $row[1]="tcc";
	if ($row[1]=="VMAX_10M")
	  $row[1]="gust";

	$comment=$gribId=$qdId="";

    if (isset($parameterUnits[$i]) && $parameterUnits[$i] == "Pa" && $maximumValues[$i] < 1200)
        $unitstr = "0;1";
    else if (isset($parameterUnits[$i]) && $parameterUnits[$i] == "%" && $maximumValues[$i] < 2)
        $unitstr = "0;100";
    else if (isset($unit[$parameterUnits[$i]]))
        $unitstr = $unit[$parameterUnits[$i]];
	else
        $unitstr = "0;1";


switch ($row[2]) {
    case "heightAboveGround":
        $levelstr = ";105;$row[3]";
        break;
    case "meanSea":
        $levelstr = ";102;$row[3]";
        break;
    case "cloudBase":
        $levelstr = ";2;$row[3]";
        break;
    case "surface":
        if ($row[1]=="t")
	  {
	     $levelstr = ";1;$row[3]";
	     $qdId=288;
	     $row[4] = "m";
	  }
	else
	   $levelstr = "";
        break;
    case "unknown":
    case "isobaricInhPa":
    case "hybrid":
        $levelstr = "";
        break;
    case "depthBelowLandLayer":
        $levelstr = ";112;$row[3]";
        break;
    case "m2":
    case "value":
    case "heightAboveSea":
    case "isothermZero":
    case "heightAboveGroundLayer":
    case "pressureFromGroundLayer":
    case "tropopause":
    case "maxWind":
    case "isobaricInPa":
    case "hybrid":
        $i++;
        continue 2;
        break;
    default:
        $comment="#";
        $levelstr = ";$row[2];$row[3]";
        break;
}

// Get ECMWF universal ID, if missing use grib2 category + parameter numbers
if ($row[0]==0)
    $gribId = $row[7].sprintf("%03d",$row[8]);
else
    $gribId = $row[0];

// If shortName in unknown, get shortName with grib id
if ($row[1]=="unknown")
    $row[1]=$shortNames[$gribId];

if ($qdId>0)
    $qdId = $qdId;
else if (isset($id[$row[1]]))
    $qdId = $id[$row[1]];
else
    $comment = "#";

if ($row[4]=="m" and is_numeric($row[3]))
    $levelstrp = " $row[3]$row[4]";
else
    $levelstrp = "";


if (is_numeric($parameterNames[$i]) || $parameterNames[$i]=="unknown")
{
    $parameterNames[$i]=$altparameterNames[$i];
}


#    print_r($row);

    $data = "# " . $id[$row[1]] . ": " . ucwords($parameterNames[$i]) . "$levelstrp [$parameterUnits[$i]]\n";
    $data .= "$comment$gribId;$qdId;".ucwords($parameterNames[$i])."$levelstrp ($row[1]);$unitstr$levelstr\n";
    $data .= "\n";
    $result[] = $data;
    $centre = strtoupper($row[6]);
    $i++;
}

$data="";
natcasesort($result);
foreach(array_unique($result) as $val) {
       $data .= $val;;
}

print<<<EOT
#
# Grib to QD Conversion Tables for Centre $centre
#
#
# ECMWF Parameter Database
# https://codes.ecmwf.int/grib/param-db/
#
# List of available SmartMetIDs
# qdinfo -l

# GribID;SmartMetID;Name;Base;Scale;LevelType;LevelValue;InterpolationMethod

$data
EOT;
